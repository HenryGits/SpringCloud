# 业务组件部署
# 订单服务、仓储服务、短信服务、邮件服务

version: "3.2"
services:
  # 1、订单服务
  order-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/order-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: order-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9004/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5
  # 2、仓储服务
  wms-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/wms-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: wms-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9011/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5
  # 3、短信服务
  sms-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/sms-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: sms-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9099/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5
  # 4、邮件服务
  mail-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/mail-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: mail-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9003/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5
  # 5、推荐模块
  recommend-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/recommend-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: recommend-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9007/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5
  # 6、正在播放模块
  play-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/play-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: play-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9005/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5
  # 7、排行榜模块
  toplist-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/toplist-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: toplist-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9010/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5
  # 8、歌手模块
  singer-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/singer-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: singer-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9008/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5

  # 9、分类歌单模块
  assortsong-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/assortsong-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: assortsong-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9001/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5
  # 10、电台模块
  radiostation-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/radiostation-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: radiostation-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9006/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5
  # 11、MV模块
  mv-service:
    # 镜像地址
    image: registry.cn-hangzhou.aliyuncs.com/zhchub/mv-service:0.0.1-SNAPSHOT
    # 容器名称
    container_name: mv-service
    # 端口不对外开放
    env_file:
      # 加载环境变量
      - ./service.env
    networks:
      # 加入集群网络
      - swarm_net
    volumes:
      # 将宿主机上的文件挂载到容器内
      - type: "bind"
        source: /etc/localtime
        target: /etc/localtime
    deploy:
      # 实例数量
      replicas: 1
      # 更新选项
      update_config:
        # 每次更新多少个容器
        parallelism: 1
        # 间隔时间
        delay: 10s
      # 启动错误时，重新启动
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # CPU限制
          cpus: '0.5'
          # 内存限制
          memory: 256M
    # 健康检查，启动后，当这个命令执行没问题，才会任何这个服务启动成功
    healthcheck:
      # 命令
      test: ["CMD", "curl", "-f", "http://master:9002/info"]
      # 间隔时间，安装应用的预计启动时间来设置。比如我们这个springcloud的应用，一般在1分钟半内预计启动完成
      interval: 1m30s
      timeout: 10s
      # 重试次数
      retries: 5


networks:
  swarm_net:
    external: true
  